#include<iostream>
using namespace std;


class Node
{ public :
    int data;
    Node * next;
    Node(int n)  {data=n; next=0;}
    Node(){}
};

class Linkedlist
{  public:
    Node* head= 0;
    void insertfront(int n);
    void insertend( int n);
    void insertafter(int n, int key);
    void insertbefore(int n, int key);
    void deleteNode(int n);
    void display( Node * h);
};

void Linkedlist :: insertfront(int n )
{
    if(head==0)
    {
        Node * temp = new Node(n);
        head=temp;
    }
    else
    {
        Node* temp = new Node(n);
        temp->next=head;
        head=temp;

    }
}

void Linkedlist ::display( Node *h)
{
    if(h==0)
    {
        cout<<"Empty list"<<endl;
    }
    else
    {
        while( h!=0)
        {
            cout<<h->data<<"->";
            h=h->next;
        }

    }
    cout<<"NULL";
    cout<<endl;
}
void Linkedlist ::insertend(int n)
{
    Node* curr= head;
    if(head==0)
    {
        Node * temp = new Node(n);
        head=temp;
    }
    else{
     while(curr->next!=0)
     {
         curr=curr->next;
     }
     Node * temp = new Node(n);
     curr->next=temp; }
}

void Linkedlist :: insertbefore( int n , int key)
{
    Node * prev=0; Node* curr=head;
    if(curr==0)
    {
        Node * temp = new Node(n);
        head=temp;
    }


        while(curr->data!=key)
        {      prev=curr;
            curr=curr->next;



        }
           if( prev==0)
    {
        Node * temp = new Node(n);
        temp->next=curr;
        head=temp;
    }




        Node * temp = new Node(n);
        temp->next=curr;
        prev->next=temp;


}
void Linkedlist :: insertafter(int n, int key)
{
    Node * curr=head->next, *prev=head;
        if(curr==0)
    {
        Node * temp = new Node(n);
        head=temp;
    }

    while(prev->data!=key)
    {
        prev=curr;
        curr=curr->next;

    }


    Node * temp = new Node(n);
    prev->next=temp;
    temp->next=curr;
}

void Linkedlist :: deleteNode( int key)
{
    Node * prev=head, * curr = head->next;

    if(head->data==key)
    {
        Node * temp= head;
        head=head->next;
        delete temp;
    }

    else{
           while(curr->data!=key)
    {
        prev=curr;
        curr=curr->next;

    }
    prev->next=curr->next;
    delete curr;


    }


}

int main()
{
    Linkedlist l1,temp;
    char exit = 'y';
    do {
    int choice,num,key;
    cout<<"This is a Menu Drive Program \nEnter \n1.Insertion in front.\n2.Insertion in End\n3.Insertion Before a key\n4.Insertion After a key\n5.Display the list\n6.Delete an Element\n";
    cout<<"Enter choice:"<<endl;
    cin>>choice;
    switch(choice)
    {
    case 1 :
        cout<<"Enter the num";
        cin>>num;
        l1.insertfront(num);
        break;
    case 2 :
        cout<<"Enter the num";
        cin>>num;
        l1.insertend(num);
        break;
    case 3:
        cout<<"Enter the num"<<endl;
        cin>>num;
        cout<<"Enter the key"<<endl;
        cin>>key;
        l1.insertbefore(num ,key);
        break;
    case 4:
        cout<<"Enter the num"<<endl;
        cin>>num;
        cout<<"Enter the key"<<endl;
        cin>>key;
        l1.insertafter(num ,key);
        break;
    case 5:
        l1.display(l1.head);
        break;
    case 6:
        cout<<"Enter the num"<<endl;
        cin>>num;

        l1.deleteNode(num);
        break;

    }

    cout<<"Do you want to continue"<<endl;
    cin>>exit;


}
 while( exit=='y'|| exit =='Y');


}

